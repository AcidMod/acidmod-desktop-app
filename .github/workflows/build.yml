name: Build (Manual)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: npm
    - name: Install dependencies
      run: npm ci
    - name: Fetch
      run: npm run fetch
    - name: Compile
      run: npm run webpack:compile
    - name: Package Windows
      if: runner.os == 'Windows'
      run: |
        node release-automation/build.js --windows --x64
        node release-automation/build.js --windows --ia32
        node release-automation/build.js --windows --arm64
        node release-automation/build.js --windows-legacy --x64
        node release-automation/build.js --microsoft-store --x64
        node release-automation/build.js --microsoft-store --ia32
        node release-automation/build.js --microsoft-store --arm64
    - name: Package macOS
      if: runner.os == 'macOS'
      run: |
        node release-automation/build.js --mac --universal
    - name: Package Linux
      if: runner.os == 'Linux'
      run: |
        node release-automation/build.js --debian --x64
        node release-automation/build.js --debian --armv7l
        node release-automation/build.js --debian --arm64
        node release-automation/build.js --tarball --x64
        node release-automation/build.js --tarball --armv7l
        node release-automation/build.js --tarball --arm64
        node release-automation/build.js --appimage --x64
        node release-automation/build.js --appimage --armv7l
        node release-automation/build.js --appimage --arm64
